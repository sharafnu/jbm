<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd 
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<task:annotation-driven executor="executor" />
	<task:executor id="executor" pool-size="7" />

	<context:spring-configured />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->

	<beans:bean id="JBMViewResolver" class="com.innovazions.jbm.viewresolver.JBMViewResolver">
		<beans:property name="webViewResolver" ref="webViewResolver" />
		<beans:property name="mobileAndroidWebViewResolver" ref="mobileAndroidWebViewResolver" />
	</beans:bean>
	
	<beans:bean id="webViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/web/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="mobileAndroidWebViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix"
			value="/WEB-INF/views/mobile-android-web/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:annotation-config />
	<context:component-scan base-package="com.innovazions.jbm" />

	<!-- declare datasource bean -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="org.postgresql.Driver" />
		<beans:property name="username" value="postgres" />
		<beans:property name="password" value="admin123" />
		<beans:property name="url"
			value="jdbc:postgresql://localhost:5432/maxmaidn_test" />
		<!-- <beans:property name="username" value="maxmaidn" /> <beans:property 
			name="password" value="84gC2Bmn6j" /> -->
	</beans:bean>

	<beans:bean id="propertiesUtil" class="com.innovazions.jbm.common.PropertiesUtil">
	</beans:bean>

	<!-- MailSender -->
	<beans:bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<!-- <beans:property name="host" value="smtp.gmail.com" /> <beans:property 
			name="port" value="587" /> <beans:property name="username" value="novotechelearning"/> 
			<beans:property name="password" value="novotechelearning1!2@3#"/> -->
		<beans:property name="host" value="jdz1.dailyrazor.com" />
		<beans:property name="username" value="maxmaidn" />
		<beans:property name="password" value="84gC2Bmn6j" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<!-- Use SMTP-AUTH to authenticate to SMTP server -->
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<!-- Use TLS to encrypt communication with SMTP server -->
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

</beans:beans>
